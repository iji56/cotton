require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, min_ios_version_supported
prepare_react_native_project!

def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')


# ⬇️ uncomment wanted permissions
setup_permissions([
  # 'AppTrackingTransparency',
  # 'Bluetooth',
  # 'Calendars',
  # 'CalendarsWriteOnly',
  'Camera',
  # 'Contacts',
  # 'FaceID',
  # 'LocationAccuracy',
  # 'LocationAlways',
  'LocationWhenInUse',
  # 'MediaLibrary',
  # 'Microphone',
  # 'Motion',
  'Notifications',
  'PhotoLibrary',
  # 'PhotoLibraryAddOnly',
  # 'Reminders',
  # 'Siri',
  # 'SpeechRecognition',
  # 'StoreKit',
])

flipper_config = FlipperConfiguration.disabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
use_frameworks! :linkage => linkage.to_sym
use_frameworks! :linkage => :static
end

target 'cotton' do

  config = use_native_modules!
  
  rn_maps_path = '../node_modules/react-native-maps'
  pod 'react-native-google-maps', :path => rn_maps_path
  pod 'RNFS', :path => '../node_modules/react-native-fs'
#  pod 'React', :path => '../node_modules/react-native', :subspecs => [
#      'RCTLinkingIOS',
#    ]

  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  
  pod 'SPTPersistentCache', :modular_headers => true
  pod 'DVAssetLoaderDelegate', :modular_headers => true

  $RNVideoUseGoogleIMA = true
  $RNVideoUseVideoCaching = true

  pod 'FirebaseCore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true

use_react_native!(
  :path => config[:reactNativePath],
  :flipper_configuration => flipper_config,
  :app_path => "#{Pod::Config.instance.installation_root}/.."
)

target 'cottonTests' do
  inherit! :complete
  # Pods for testing
end

post_install do |installer|
  react_native_post_install(
    installer,
    config[:reactNativePath],
    :mac_catalyst_enabled => false
  )
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['ENABLE_BITCODE'] = 'NO'
    end
  end
end
end






# def node_require(script)
#   # Resolve script with node to allow for hoisting
#   require Pod::Executable.execute_command('node', ['-p',
#     "require.resolve(
#       '#{script}',
#       {paths: [process.argv[1]]},
#     )", __dir__]).strip
# end

# node_require('react-native/scripts/react_native_pods.rb')
# node_require('react-native-permissions/scripts/setup.rb')

# require_relative '../node_modules/react-native/scripts/react_native_pods'
# require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

# platform :ios, min_ios_version_supported
# prepare_react_native_project!


# # ⬇️ uncomment wanted permissions
# # setup_permissions([
#   # 'AppTrackingTransparency',
#   # 'Bluetooth',
#   # 'Calendars',
#   # 'CalendarsWriteOnly',
#   # 'Camera',
#   # 'Contacts',
#   # 'FaceID',
#   # 'LocationAccuracy',
#   # 'LocationAlways',
#   # 'LocationWhenInUse',
#   # 'MediaLibrary',
#   # 'Microphone',
#   # 'Motion',
#   # 'Notifications',
#   # 'PhotoLibrary',
#   # 'PhotoLibraryAddOnly',
#   # 'Reminders',
#   # 'Siri',
#   # 'SpeechRecognition',
#   # 'StoreKit',
# # ])

# flipper_config = FlipperConfiguration.disabled

# linkage = ENV['USE_FRAMEWORKS']
# if linkage != nil
# Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
# use_frameworks! :linkage => linkage.to_sym
# use_frameworks! :linkage => :static
# end

# target 'cotton' do
#   rn_maps_path = '../node_modules/react-native-maps'
#   pod 'react-native-google-maps', :path => rn_maps_path
#   config = use_native_modules!
  
# #  pod 'React', :path => '../node_modules/react-native', :subspecs => [
# #      'RCTLinkingIOS',
# #    ]
  
#   pod 'Firebase', :modular_headers => true
#   pod 'FirebaseCoreInternal', :modular_headers => true
#   pod 'GoogleUtilities', :modular_headers => true
#   pod 'FirebaseCore', :modular_headers => true
  
#   pod 'SPTPersistentCache', :modular_headers => true
#   pod 'DVAssetLoaderDelegate', :modular_headers => true

#   $RNVideoUseGoogleIMA = true
#   $RNVideoUseVideoCaching = true

# pod 'FirebaseCore', :modular_headers => true
# pod 'GoogleUtilities', :modular_headers => true

# use_react_native!(
#   :path => config[:reactNativePath],
#   :flipper_configuration => flipper_config,
#   :app_path => "#{Pod::Config.instance.installation_root}/.."
# )

# target 'cottonTests' do
#   inherit! :complete
#   # Pods for testing
# end

# post_install do |installer|
#   react_native_post_install(
#     installer,
#     config[:reactNativePath],
#     :mac_catalyst_enabled => false
#   )
#   installer.pods_project.targets.each do |target|
#     target.build_configurations.each do |config|
#       config.build_settings['ENABLE_BITCODE'] = 'NO'
#     end
#   end
# end
# end

